{"version":3,"sources":["assets/HomePageOption.js","assets/HomePage.js","assets/SidebarOption.js","assets/GeneralPage/GeneralPageSidebar.js","assets/GeneralPage/GeneralPageChartReducer.js","app_config.js","assets/getData.js","assets/GeneralPage/controls.js","assets/GeneralPage/GeneralPageHeader.js","assets/GeneralPage/GeneralPageLineChart.js","assets/GeneralPage/GeneralPagePieCharts.js","assets/mapConfig.js","assets/GeneralPage/GeneralPageMap.js","assets/GeneralPage/GeneralPageCharts.js","assets/GeneralPage/GeneralPageMainPage.js","assets/GeneralPage/GeneralPageChart.js","assets/GeneralPage/GeneralPageChartSelector.js","assets/GeneralPage/GeneralPage.js","assets/DataTable/DataTableSidebar.js","assets/DataTable/DataTablePageHeader.js","assets/DataTable/DataTableTable.js","assets/DataTable/DataTableMainPage.js","assets/DataTable/DataTable.js","App.js","reportWebVitals.js","index.js"],"names":["HomePageOption","headerText","iconText","linkText","className","to","memo","HomePage","useRouteMatch","links","path","url","useMemo","map","link","i","key","SidebarOption","handleClick","selected","onClick","GeneralPageSidebar","curUrl","setUrl","urls","curChart","getUrlName","useCallback","text","substring","indexOf","window","location","replace","origin","CHART_REDUCER_OPTIONS","chartReducer","state","action","type","lines","payload","alert","controlsSelected","length","xAxis","tempLines","splice","name","value","keyValuePairs","some","pair","concat","curMetric","console","log","perMetric","env","getData","a","axios","get","headers","res","data","message","controls","GeneralPageLineChart","curChartData","chartDispatch","metrics","numericMetrics","htmlFor","onChange","e","target","id","filter","metric","GeneralPagePieCharts","positiveMetrics","GeneralPageMap","React","useState","allDates","setAllDates","useEffect","getAllDates","min","Date","date","valueOf","max","step","Number","toISOString","GeneralPageHeader","charts","Control","dataSet","LineChart","width","innerWidth","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","line","Line","stroke","Math","floor","random","activeDot","r","finalDataset","colors","PieChart","info","Pie","isAnimationActive","cx","cy","outerRadius","innerRadius","fill","label","prev","next","google","getRelativeValue","cur","total","mapConfig","document","getElementById","getMaxMin","center","maps","LatLng","lat","lon","Map","zoom","mapId","infoWindow","InfoWindow","svgMarker","fillColor","fillOpacity","strokeWeight","rotation","scale","anchor","Point","poi_data","markerSize","opacity","marker","Marker","position","icon","color","addListener","setContent","poi_id","open","clearMarkers","markers","m","setMap","markersRef","useRef","current","loadMap","GeneralPageCharts","Chart","props","GeneralPageMainPage","Object","keys","chartData","markerLocations","markerData","every","useReducer","GeneralPageChart","chart","icons","GeneralPageChartSelector","setCurChart","GeneralPage","setDataSet","getUrl","fetchData","DataTableSidebar","DataTablePageHeader","handleSearch","setCurMetric","for","onKeyUp","placeholder","autoComplete","toUpperCase","DataTableTable","idd","DataTableMainPage","filteredDataSet","setFilteredDataSet","options","fuse","Fuse","search","result","item","DataTable","then","catch","err","App","routes","render","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b4b3e32c.chunk.js","sourcesContent":["import React ,{memo}from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./stylesheets/HomePageOption.css\"\r\n\r\nfunction HomePageOption({headerText, iconText, linkText}) {\r\n    return (\r\n            <div className=\"homepage__option flex flex-column\">\r\n                <i className=\"material-icons\">\r\n                    {iconText}\r\n                </i>\r\n                <hr/>\r\n                <h1>{headerText}</h1>\r\n                <Link to={linkText} className=\"go\">Try</Link>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default memo(HomePageOption)\r\n","import React, {memo, useMemo} from 'react'\r\nimport HomePageOption from './HomePageOption'\r\nimport {useRouteMatch} from \"react-router-dom\"\r\nimport './stylesheets/HomePage.css'\r\n\r\nfunction HomePage() {\r\n    const {path,url} = useRouteMatch();\r\n    const links = useMemo(()=>[\r\n        {\r\n            headerText: \"general and geo charts\",\r\n            linkText:`/general`,\r\n            iconText: \"insights\"\r\n        },\r\n        {\r\n            headerText: \"Data Table\",\r\n            linkText:`/datatable`,\r\n            iconText: \"table_view\"\r\n        }\r\n\r\n    ])\r\n\r\n    return (\r\n        <div className=\"homepage__container\">\r\n            <h1>Analyse and Compare data</h1>\r\n\r\n            <div className=\"homepage flex flex-row\">\r\n            {links.map((link,i)=>(\r\n                <HomePageOption {...link} key={i}/>\r\n            ))}\r\n            </div>\r\n    </div> \r\n       \r\n    )\r\n}\r\n\r\nexport default memo(HomePage)\r\n","import React ,{memo}from 'react'\r\nimport './stylesheets/SidebarOption.css'\r\nfunction SidebarOption({headerText, handleClick, iconText, selected}) {\r\n    return (\r\n        <div className={`sidebaroption flex flex-row ${selected && \"selected\"} selectable`} onClick={handleClick}>\r\n            <span className=\"material-icons\">\r\n                {iconText}\r\n            </span>\r\n            <span>{headerText}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SidebarOption)\r\n","import React ,{useCallback, memo}from 'react'\r\nimport '../stylesheets/GeneralPageSidebar.css';\r\nimport SidebarOption from '../SidebarOption'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction GeneralPageSidebar({curUrl, setUrl, urls,curChart}) {\r\n    const getUrlName = useCallback((text)=>{\r\n        return text.substring(0,text.indexOf(\"-\"))\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"generalpage__sidebar flex flex-column\">\r\n            <Link to=\"/\">\r\n                <SidebarOption iconText=\"arrow_back_ios\" headerText=\"Select API\" handleClick={null} iconText=\"arrow_back_ios\" onClick={()=>{window.location.replace(window.location.origin)}}  />\r\n            </Link>\r\n            {\r\n                urls[curChart].map((url,i)=>(\r\n                    <SidebarOption iconText=\"link\" headerText={getUrlName(url)} handleClick={()=>setUrl(i)} selected={curUrl===i?true:false} key={i}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(GeneralPageSidebar)\r\n","export const CHART_REDUCER_OPTIONS = {\r\n    EDIT_XAXIS: 'xaxis',\r\n    ADD_LINE: 'addline',\r\n    REMOVE_LINE: 'removeline',\r\n    CHANGE_TEMPLATE: 'changetemplate',\r\n    ADD_PIE_NAME: 'addpiename',\r\n    ADD_PIE_VALUE: 'addpievalue',\r\n    CREATE_PIE_CHARTS: 'createpiecharts',\r\n    CLEAR_PIE_CHARTS: 'clearpiecharts',\r\n    ADD_MAP_METRIC: 'addmapmetric',\r\n    VIEW_MAP_METRIC: 'viewmapmetric',\r\n    ADD_MAP_DATE: 'addmapdate'\r\n}\r\n\r\nexport  function chartReducer(state,action){\r\n    let actionType = action.type;\r\n    switch(actionType){\r\n        case CHART_REDUCER_OPTIONS.EDIT_XAXIS:  \r\n        if(state.lines.indexOf(action.payload)>-1){\r\n            alert(\"This metric is already on the Y axis\");\r\n            return state;\r\n        } else{\r\n            let controlsSelected = true;\r\n                if(state.lines?.length == 0)\r\n                    controlsSelected = false\r\n            return {\r\n                ...state,\r\n                xAxis: action.payload,\r\n                controlsSelected: controlsSelected\r\n            }\r\n        }\r\n    break;\r\n\r\n        case CHART_REDUCER_OPTIONS.ADD_LINE:\r\n            if(state.lines.indexOf(action.payload)>-1){\r\n                alert(\"This metric is already on the Y axis-ADD LINE\");\r\n                return state;\r\n            } else{\r\n                let controlsSelected = true;\r\n                if(state.xAxis == null)\r\n                    controlsSelected = false                \r\n                return {\r\n                    ...state,\r\n                    lines: [...state.lines,action.payload],\r\n                    controlsSelected: controlsSelected\r\n                };\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.REMOVE_LINE:\r\n            if(state.lines.indexOf(action.payload)==-1){\r\n                alert(\"No such metric exists on Y axis\");\r\n                return state;\r\n            } else{\r\n                let tempLines = state.lines;\r\n                tempLines.splice(tempLines.indexOf(action.payload),1)\r\n                let controlsSelected=true;\r\n                if(state.xAxis == null || state.lines.length == 0)\r\n                    controlsSelected = false\r\n\r\n                return {\r\n                    ...state,\r\n                    lines: tempLines,\r\n                    controlsSelected: controlsSelected\r\n                };\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.ADD_PIE_NAME:\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        break;\r\n        case CHART_REDUCER_OPTIONS.ADD_PIE_VALUE:\r\n            return {\r\n                ...state,\r\n                value: action.payload\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.CREATE_PIE_CHARTS:\r\n            if(state?.keyValuePairs?.some((pair)=>{\r\n                return pair.name === state.name && pair.value === state.value;\r\n            })){\r\n                alert(\"Already created pie chart with supplied values\")\r\n                return state;\r\n            }else{\r\n                if(state.name===null){\r\n                    alert('Please provide label')\r\n                    return state;\r\n                } else if(state.value===null){\r\n                    alert('Please provide Data property')\r\n                    return state;\r\n                } else if(state.keyValuePairs?.length == 4){\r\n                    alert(\"You will have to clear the current charts to create a new one\")\r\n                    return state;\r\n                }else{\r\n\r\n                    return {\r\n                        ...state,\r\n                        name: null,\r\n                        value: null,\r\n                        keyValuePairs: state.keyValuePairs?.concat([{name:state.name, value:state.value}]),\r\n                        controlsSelected: true\r\n                    }\r\n                }\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.CLEAR_PIE_CHARTS:\r\n            return {\r\n                ...state,\r\n                keyValuePairs: []\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.CHANGE_TEMPLATE:\r\n            return action.payload;\r\n            break;\r\n\r\n        case CHART_REDUCER_OPTIONS.ADD_MAP_METRIC:\r\n            if(state.curMetric == action.payload)\r\n                return state;\r\n            else if(action.payload != null){\r\n                return {\r\n                    ...state,\r\n                    curMetric: action.payload\r\n                }\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.ADD_MAP_DATE:\r\n            console.log(action.payload)\r\n            if(state.perMetric == action.payload)\r\n                return state;\r\n            else if(action.payload != null){\r\n                return {\r\n                    ...state,\r\n                    perMetric: action.payload\r\n                }\r\n            }\r\n        break;\r\n\r\n        case CHART_REDUCER_OPTIONS.VIEW_MAP_METRIC:\r\n            if(state.curMetric == null){\r\n                alert(\"Please select metric to view\")\r\n                return state;\r\n            }\r\n            else{\r\n                return {\r\n                    ...state,\r\n                    controlsSelected: true\r\n                }\r\n            }\r\n        break;\r\n\r\n\r\n    }\r\n}","export const env = {\r\n    API_URI: \"https://shocking-speckle-warrior.glitch.me\"\r\n}\r\n\r\n","import {env} from '../app_config'\r\nimport axios from \"axios\"\r\n\r\nexport default async function getData(url){\r\n    try{\r\n    let res =  await axios.get(env.API_URI+url,{\r\n        headers:{\r\n            \"Access-Control-Allow-Origin\":\"*\"\r\n        }\r\n    })\r\n    return res?.data;\r\n    }catch(e){\r\n        alert(e.message);\r\n        return null;\r\n    }\r\n}","import {CHART_REDUCER_OPTIONS} from './GeneralPageChartReducer'\r\nimport getData from '../getData'\r\nimport React from 'react'\r\n\r\nexport const controls = {\r\n    //Component htmlFor line chart\r\n    GeneralPageLineChart:({curChartData,chartDispatch,metrics,numericMetrics})=>{\r\n       // console.log(\"CHAR DATA \")\r\n        //console.log(curChartData)\r\n        return (\r\n            <div className=\"controls  flex flex-row\">\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"xaxis\">X Axis <b>{curChartData?.xAxis ? `(${curChartData?.xAxis})`:''}</b></label>\r\n                    <select onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.EDIT_XAXIS,\r\n                        payload: e.target.value\r\n                    })} name=\"xaxis\" id=\"xaxis\" value={\"\"}>\r\n                        <option>--</option>\r\n                        {\r\n                            //Displays all metrics that are not currently in the x axis\r\n                            metrics?.filter(metric=>{\r\n                                return metric != curChartData?.xAxis;\r\n                            }).map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"lines\">Add Metric <b>{curChartData?.lines?.length>0 ? `(${curChartData?.lines[curChartData.lines.length-1]})`:''}</b></label>\r\n                    <select name=\"lines\" id=\"lines\" onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.ADD_LINE,\r\n                        payload: e.target.value\r\n                    })} value={\"\"}>\r\n                        <option>--</option>\r\n\r\n                        {\r\n                            //Displays all metrics that are not currently in the y axis\r\n                            numericMetrics?.filter(metric=>{\r\n                                return curChartData?.lines?.indexOf(metric) == -1;\r\n                            }).map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"removeLines\">Remove Metric</label>\r\n                    <select name=\"removeLines\" id=\"removeLines\" onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.REMOVE_LINE,\r\n                        payload: e.target.value\r\n                    })} value={\"\"}>\r\n                        <option>--</option>\r\n\r\n                    {\r\n                            //Displays all metrics that are not currently in the y axis\r\n                            curChartData?.lines?.map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    //Component htmlFor PIE chart\r\n    GeneralPagePieCharts:({curChartData,chartDispatch,metrics,positiveMetrics})=>{\r\n       /*\r\n       GeneralPagePieCharts:{\r\n            dataKey: '',\r\n            controlsSelected: false\r\n        }\r\n        */\r\n      \r\n        return (\r\n            <div className=\"controls  flex flex-row\">\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"name\">Pie Slice Label <b>{curChartData?.name ? `(${curChartData?.name})`:''}</b></label>\r\n                    <select name=\"name\" id=\"name\" onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.ADD_PIE_NAME,\r\n                        payload: e.target.value\r\n                    })} value={\"\"}>\r\n                        <option>--</option>\r\n                        {\r\n                            //Displays all metrics\r\n                            metrics?.map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"lines\">Pie Slice Data <b>{curChartData?.value ? `(${curChartData?.value})`:''}</b></label>\r\n                    <select name=\"lines\" id=\"lines\"onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.ADD_PIE_VALUE,\r\n                        payload: e.target.value\r\n                    })}value={\"\"}>\r\n                    <option>--</option>\r\n                        {\r\n                            //Displays all metrics\r\n                            positiveMetrics?.filter(metric=>metric != curChartData.name).map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"control addpiecharts\">\r\n                    <button onClick={()=>chartDispatch({\r\n                            type: CHART_REDUCER_OPTIONS.CREATE_PIE_CHARTS\r\n                        })\r\n                    }>Add</button>\r\n                </div>\r\n                <div className=\"control clearpiecharts\">\r\n                    <button onClick={()=>chartDispatch({\r\n                            type: CHART_REDUCER_OPTIONS.CLEAR_PIE_CHARTS\r\n                        })\r\n                    }>Clear</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    },\r\n    GeneralPageMap:({metrics,curChartData,chartDispatch})=>{\r\n        //Gets all the date names from API\r\n        const [allDates,setAllDates] = React.useState(null)\r\n        React.useEffect(()=>{\r\n         async function getAllDates(){\r\n            let data = await getData(\"/alldates\")\r\n            //console.log(data)\r\n            setAllDates(data)\r\n\r\n         }\r\n         getAllDates()\r\n        },[])\r\n        console.log(allDates)\r\n        return (\r\n            <div className=\"controls  flex flex-row\">\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"metric\">Metric to view <b>{curChartData?.curMetric ? `(${curChartData?.curMetric})`:''}</b></label>\r\n                    <select name=\"metric\" id=\"metric\" onChange={e=>chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.ADD_MAP_METRIC,\r\n                        payload: e.target.value\r\n                    })}value={\"\"}>\r\n                    <option>--</option>\r\n                        {\r\n                            //Displays all metrics\r\n                            metrics?.filter(metric=>metric != \"date\").map((metric,i)=>{\r\n                                return <option value={metric} key={i}>{metric}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <label htmlFor=\"dates\">Date search <b>{curChartData?.perMetric ? `(${curChartData?.perMetric})`:''}</b></label>\r\n                    <input type=\"range\" min={allDates ? new Date(allDates[0]?.date).valueOf():0} max={allDates?new Date(allDates[allDates.length-1]?.date).valueOf():86400000} step={86400000} onChange={e=>{\r\n                        if( e.target.value >= new Date(allDates[0]?.date).valueOf() && e.target.value <= new Date(allDates[allDates.length-1].date.valueOf())){\r\n                            chartDispatch({\r\n                        type: CHART_REDUCER_OPTIONS.ADD_MAP_DATE,\r\n                        payload: new Date(Number(e.target.value)).toISOString()\r\n                    })}}} />\r\n                \r\n                    \r\n                </div>\r\n                <div className=\"control addpiecharts\">\r\n                    <button onClick={()=>chartDispatch({\r\n                            type: CHART_REDUCER_OPTIONS.VIEW_MAP_METRIC\r\n                        })\r\n                    }>View</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n ","import React from 'react'\r\nimport {controls} from './controls'\r\n\r\nfunction GeneralPageHeader({positiveMetrics, metrics, chartDispatch, curChart, charts,curChartData,numericMetrics}) {\r\n   \r\n    // Developing components dynamically according to the current chart passed as props    \r\n    let Control =()=><div></div>\r\n    if(curChart != null){\r\n        Control = controls[charts[curChart]]\r\n    }\r\n    return (\r\n        <div className=\"generalpage__pageheader\">\r\n            {\r\n                <Control chartDispatch={chartDispatch} curChartData={curChartData} metrics={metrics} positiveMetrics={positiveMetrics} numericMetrics={numericMetrics}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralPageHeader","import React from 'react'\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n  } from \"recharts\";\r\n\r\nfunction GeneralPageLineChart({xAxis, lines, dataSet}) {\r\n  \r\n    return (\r\n        <div className=\"chart chart__linechart\">\r\n         <LineChart\r\n      width={window.innerWidth*0.5}\r\n      height={500}\r\n      data={dataSet}\r\n      \r\n    >\r\n      <CartesianGrid strokeDasharray=\"5 5\" />\r\n      <XAxis dataKey={xAxis} />\r\n      <YAxis/>\r\n      <Tooltip />\r\n      <Legend />\r\n      {\r\n          lines?.map((line,i)=>{\r\n              return (\r\n                <Line\r\n                type=\"monotone\"\r\n                dataKey={line}\r\n                stroke={`rgb(${Math.floor(Math.random()*250+1)},${Math.floor(Math.random()*100+1)},${Math.floor(Math.random()*250+121)})`}\r\n                activeDot={{ r: i }}\r\n                key={i}\r\n              />\r\n              )\r\n          })\r\n      }\r\n      \r\n    </LineChart>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GeneralPageLineChart)\r\n","import React,{useMemo} from 'react'\r\nimport { PieChart, Pie, Tooltip} from \"recharts\";\r\n\r\nfunction GeneralPagePieCharts({keyValuePairs,dataSet}) {\r\n    let finalDataset = useMemo(()=>keyValuePairs?.map((pair,i)=>{\r\n        return {\r\n            value: pair.value,\r\n            dataSet: dataSet.map(data=>{\r\n            return {\r\n                name: data[pair.name],\r\n                [pair.value]: data[pair.value]\r\n            }\r\n        })\r\n    }\r\n     }),[keyValuePairs?.length]);\r\n\r\n     const colors=['blue','darkgreen','tomato','gold']\r\n    return (\r\n        <div className=\"chart chart__piechart\">\r\n            <PieChart width={window.innerWidth*.5} height={500}>\r\n                 {\r\n                     finalDataset?.map((info,i)=>{\r\n                        return (<Pie\r\n                            key={i}\r\n                            dataKey={info.value}\r\n                            isAnimationActive={false}\r\n                            data={info.dataSet}\r\n                            cx={((3*i+2)*100)%600}\r\n                            cy={100+Math.floor((i/2))*250}\r\n                            outerRadius={80}\r\n                            innerRadius={40}\r\n                            fill={colors[i]}\r\n                            label\r\n                        />  )                   })\r\n                 }  \r\n                 <Tooltip/>\r\n                 </PieChart>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(GeneralPagePieCharts,[(prev,next)=>prev.keyValuePairs?.length === next.keyValuePairs?.length])\r\n ","\r\nconst google = window.google\r\n//const MarkerClusterer = window.MarkerClusterer \r\n\r\nfunction getRelativeValue(max,min,cur,total){\r\n    return Math.floor(((max-cur)/(max-min))*total)\r\n}\r\n\r\n//Tested\r\nfunction getMaxMin(dataSet,curMetric){\r\n    let min = null,max=0\r\n    let data;\r\n    for(data in dataSet){\r\n        if(min==null){\r\n            min = dataSet[data][curMetric];\r\n            continue;\r\n        }\r\n        if(dataSet[data][curMetric]<min){\r\n            min = dataSet[data][curMetric]\r\n        }\r\n        if(dataSet[data][curMetric]>max){\r\n            max = dataSet[data][curMetric]\r\n        }\r\n    }\r\n    return [max,min]\r\n}\r\nfunction clone(obj) {\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n    var copy = obj.constructor();\r\n    for (var attr in obj) {\r\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\r\n    }\r\n    return copy;\r\n}\r\n\r\nexport default function mapConfig(dataSet, curMetric){\r\n        if(document.getElementById(\"map\")==null)\r\n            return;\r\n        //Getting max and minimum metric to figure out each value's intensity\r\n        let [max,min] = getMaxMin(dataSet,curMetric)        \r\n        //console.log(dataSet)\r\n        const center = new google.maps.LatLng(dataSet[0]?.lat, dataSet[0]?.lon);\r\n        const map = new google.maps.Map(document.getElementById(\"map\"),{\r\n            center: center,\r\n            zoom:1,\r\n            mapId: \"ae53a2d5beaebd92\"\r\n        })\r\n        //Declaring info window\r\n        const infoWindow = new google.maps.InfoWindow();\r\n\r\n        //We make a simple diamond marker icon\r\n        const svgMarker = {\r\n            path: null,\r\n            fillColor: null,\r\n            fillOpacity: 1,\r\n            strokeWeight: 0,\r\n            rotation: 0,\r\n            scale: 1,\r\n            anchor: new google.maps.Point(0,0),\r\n          };\r\n\r\n        //Loading Markers into an Array\r\n        var markers =[\r\n            dataSet.map((poi_data,i)=>{\r\n                //Color depends upon the value of the current metric\r\n                svgMarker.fillColor = `rgb(255,${getRelativeValue(max,min,poi_data[curMetric],254)},0)`\r\n               // console.log(svgMarker.fillColor)\r\n\r\n                //Marker Size here\r\n                let markerSize = (30-getRelativeValue(max,min,poi_data[curMetric],30))+15;\r\n                let path = `M 0,${markerSize/2} A ${markerSize/2},${markerSize/2} 0 0,1 ${markerSize},${markerSize/2}  A ${markerSize/2},${markerSize/2} -180 0,1 0,${markerSize/2}`\r\n                svgMarker.path = path\r\n\r\n                let opacity = (0.5-getRelativeValue(max,min,poi_data[curMetric],0.5))+0.5;\r\n                svgMarker.fillOpacity = opacity;\r\n                //Marker created here\r\n                let marker = new google.maps.Marker({\r\n                    position: new google.maps.LatLng(poi_data.lat,poi_data.lon),\r\n                    icon: svgMarker,\r\n                    map: map,\r\n                    label:{\r\n                        text:poi_data[\"name\"],\r\n                        color: \"white\"\r\n                    }\r\n                })\r\n                \r\n                             //Here adding the onClick listener\r\n                marker.addListener(\"click\",(e)=>{\r\n                    infoWindow.setContent(`<b>${poi_data.poi_id}. ${poi_data.name}</b><br/>${curMetric}: ${poi_data[curMetric]}`)\r\n                    infoWindow.open(map,marker)\r\n                })\r\n                return marker\r\n            })\r\n        ]\r\n        //Add clustering with default icons from google maps library\r\n        /*new MarkerClusterer(map,markers,{\r\n            imagePath:\r\n              '../../public/images/m.png',\r\n          })\r\n          */\r\n\r\n          return markers;\r\n    }","import React,{useRef,useEffect} from 'react'\r\nimport mapConfig from '../mapConfig'\r\nimport getData from '../getData'\r\n\r\nimport '../stylesheets/GeneralPageMap.css'\r\n\r\nfunction clearMarkers(markers) {\r\n    console.log(markers)\r\n    for (let m of markers) {\r\n        if(m?.setMap)\r\n            m.setMap(null)\r\n    }\r\n  }\r\n\r\nfunction GeneralPageMap({curMetric, perMetric, dataSet,url}) {\r\n    const markersRef = useRef([null])\r\n\r\n    useEffect(()=>{\r\n        if(document.getElementById(\"map\")!= null){\r\n        async function loadMap(){\r\n            let data=null;\r\n                if(url?.indexOf(\"stats\") != -1)\r\n                    data = await getData(`/stats/perday/${perMetric!=null?perMetric:\"first\"}`);\r\n                else\r\n                    data = await getData(`/events/perday/${perMetric!=null?perMetric:\"first\"}`);\r\n                //clear any existing markers\r\n                clearMarkers(markersRef.current)\r\n                console.log()\r\n                markersRef.current =  mapConfig(data, curMetric)\r\n            }\r\n        loadMap();\r\n\r\n        }\r\n       \r\n    },[curMetric,dataSet])\r\n    //},[curMetric])\r\n\r\n    if(dataSet !== null && dataSet?.length > 0 && curMetric != null){\r\n        return (\r\n            <div className=\"generalpage__map\">\r\n                <div className=\"generalpage__info\"><span>High</span><span>Low</span></div>\r\n                <div id=\"map\"></div>\r\n            </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <span className=\"material-icons loader\">\r\n                hourglass_empty\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GeneralPageMap\r\n","import React, {memo,useMemo} from 'react'\r\nimport GeneralPageLineChart from './GeneralPageLineChart'\r\nimport GeneralPagePieCharts from './GeneralPagePieCharts'\r\nimport GeneralPageMap from './GeneralPageMap'\r\n\r\nfunction GeneralPageCharts({dataSet,curChart, curChartData,charts,url}) {\r\n   \r\n    const components = {\r\n        GeneralPageLineChart:(props)=>{\r\n            return <GeneralPageLineChart {...props} />\r\n        },\r\n        GeneralPagePieCharts:(props)=>{\r\n            return <GeneralPagePieCharts {...props} />\r\n        },\r\n        GeneralPageMap:(props)=>{\r\n            return <GeneralPageMap {...props} />\r\n        }\r\n\r\n    }\r\n\r\n    let Chart = components[charts[curChart]]\r\n    if(dataSet == null || dataSet.length==0){   // No data fetched yet\r\n        return (\r\n            <span className=\"material-icons loader\">\r\n                hourglass_empty\r\n            </span>\r\n            \r\n            )\r\n    } else if(typeof curChartData == \"undefined\"){   // No data fetched yet\r\n        return (\r\n            <div className=\"centered flex flex-row no-search-results\">\r\n                <span className=\"material-icons\">\r\n                    info\r\n                </span> \r\n                <span>Controls need to be selected first</span>\r\n            </div>\r\n            \r\n            )\r\n    }else if(curChartData.controlsSelected === false){   // Controls invalid\r\n        return (\r\n            <div className=\"centered flex flex-row no-search-results\">\r\n                <span className=\"material-icons\">\r\n                    info\r\n                </span> \r\n                <span>All Controls need to be selected first</span>\r\n            </div>\r\n            \r\n            )\r\n    }else {\r\n        return (\r\n            <div className=\"generalpage__chart\">\r\n                <Chart {...curChartData} dataSet={dataSet} url={url} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default memo(GeneralPageCharts)\r\n","import React,{useReducer,useMemo,useEffect} from 'react'\r\nimport '../stylesheets/GeneralPageMainPage.css'\r\nimport GeneralPageHeader from './GeneralPageHeader'\r\nimport GeneralPageCharts from './GeneralPageCharts'\r\nimport {CHART_REDUCER_OPTIONS,chartReducer} from './GeneralPageChartReducer'\r\n\r\nfunction GeneralPageMainPage({dataSet,curChart,charts,url}) {\r\n    const metrics =   useMemo(()=>{\r\n       if(dataSet != null && dataSet.length > 0)\r\n        return Object.keys(dataSet[0])\r\n       else\r\n        return null \r\n    }, [dataSet]);\r\n\r\n    const chartData = {\r\n        GeneralPageLineChart:{\r\n            xAxis: null,\r\n            lines: [],\r\n            controlsSelected: false\r\n        },\r\n        GeneralPagePieCharts:{\r\n            value: null,\r\n            name: null,\r\n            keyValuePairs:[],\r\n            controlsSelected: false\r\n        },\r\n        GeneralPageMap:{\r\n            markerLocations:[],\r\n            markerData:[],\r\n            perMetric:null,\r\n            curMetric:null,\r\n            controlsSelected: false\r\n        }\r\n\r\n    }\r\n\r\n     //Getting metrics with positive values only, no strings for dropdowns to use\r\n     const positiveMetrics = useMemo(()=>{\r\n        if(dataSet==null || dataSet?.length <= 0)\r\n            return null;\r\n        let metrics = Object.keys(dataSet[0])\r\n        for(let metric in metrics){\r\n            if(typeof dataSet[0][metrics[metric]] !==\"number\" || !dataSet.every((data)=>{\r\n                return data[metrics[metric]] > 0\r\n            })){\r\n                metrics.splice(metrics.indexOf(metrics[metric]),1)\r\n            }\r\n        }\r\n        return metrics\r\n    })\r\n\r\n    //Getting metrics with positive values only, no strings for dropdowns to use\r\n    const numericMetrics = useMemo(()=>{\r\n        if(dataSet==null || dataSet?.length <= 0)\r\n            return null;\r\n        let metrics = Object.keys(dataSet[0])\r\n        for(let metric in metrics){\r\n            if(typeof dataSet[0][metrics[metric]] !==\"number\"){\r\n                metrics.splice(metrics.indexOf(metrics[metric]),1)\r\n            }\r\n        }\r\n        return metrics\r\n    })\r\n\r\n    const [curChartData, chartDispatch] = useReducer(chartReducer,{})\r\n    //So that template for chart data changes whenever curChart changes\r\n    useEffect(()=>{\r\n        chartDispatch({\r\n            type: CHART_REDUCER_OPTIONS.CHANGE_TEMPLATE,\r\n            payload:chartData[charts[curChart]]\r\n        })\r\n    },[curChart,dataSet])\r\n   \r\n    return (\r\n        <div className=\"generalpage__mainpage flex flex-column\">\r\n            <GeneralPageHeader metrics={metrics} curChartData={curChartData} curChart={curChart} chartDispatch={chartDispatch} charts={charts} positiveMetrics={positiveMetrics} numericMetrics={numericMetrics}/>\r\n            <GeneralPageCharts dataSet={dataSet} curChart={curChart} curChartData={curChartData} charts={charts} url={url}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralPageMainPage\r\n","import React from 'react'\r\n\r\nfunction GeneralPageChart({onClick, chart, curChart}) {\r\n    const icons = {\r\n        GeneralPageLineChart:{\r\n            iconText: \"multiline_chart\",\r\n            headerText: \"Line\"\r\n    },\r\n    GeneralPagePieCharts:{\r\n        iconText: \"pie_chart\",\r\n        headerText: \"Pie\"\r\n},\r\n    GeneralPageMap:{\r\n        iconText: \"terrain\",\r\n        headerText: \"Map\"\r\n    }}\r\n    return (\r\n        <div className={`generalpage__chart__link ${curChart?'curChart':''} flex flex-column`} onClick={onClick}>\r\n                <i className=\"material-icons\">\r\n                    {icons[chart]?.iconText}\r\n                </i> \r\n                <span>{icons[chart]?.headerText}</span>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralPageChart\r\n","import React from 'react'\r\nimport GeneralPageChart from './GeneralPageChart'\r\nimport '../stylesheets/GeneralPageChartSelector.css'\r\n\r\nfunction GeneralPageChartSelector({curChart,setCurChart,charts}) {\r\n    //console.log(charts)\r\n    return (\r\n        <div className=\"generalpage__chartselector flex flex-column\">\r\n            {charts?.map((chart,i)=>{\r\n                return (\r\n                    <GeneralPageChart chart={chart} onClick={()=>setCurChart(i)} curChart={i==curChart?true:false} key={i}/>\r\n                )\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralPageChartSelector\r\n","import React,{memo,useEffect, useState,useMemo,useCallback} from 'react'\r\nimport GeneralPageSidebar from './GeneralPageSidebar'\r\nimport GeneralPageMainPage from './GeneralPageMainPage'\r\nimport GeneralPageChartSelector from './GeneralPageChartSelector'\r\nimport getData from '../getData'\r\nimport '../stylesheets/GeneralPage.css'\r\n\r\nfunction GeneralPage() {\r\n\r\n    //Data set fetched will be placed here\r\n    const [dataSet,setDataSet] = useState(null)\r\n    const getUrl = useCallback((text)=>{\r\n        return text.substring(text.indexOf(\"-\")+1)\r\n    },[])\r\n\r\n    //URLS for different types of charts\r\n    const urls = useMemo(()=>{\r\n        return {\r\n        GeneralPageMap: ['Daily Events-/events/single','Daily Stats-/stats/single'],\r\n        GeneralPageLineChart: ['POI data-/poi','Hourly Events-/events/hourly','Daily Events-/events/daily','Hourly Stats-/stats/hourly','Daily Stats-/stats/daily'],\r\n        GeneralPagePieCharts: ['POI data-/poi','Hourly Events-/events/hourly','Daily Events-/events/daily','Hourly Stats-/stats/hourly','Daily Stats-/stats/daily'],\r\n    }})\r\n    //current URL\r\n    const [url,setUrl] = useState(0)\r\n    //CHARTs\r\n    const charts = useMemo(()=>['GeneralPageLineChart','GeneralPagePieCharts','GeneralPageMap'])\r\n    const [curChart, setCurChart] = useState(0)\r\n    //Fetch data from api in url state\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            let data = await getData(getUrl(urls[charts[curChart]][url]));\r\n            if(data != null)\r\n                setDataSet(data)\r\n        }\r\n        fetchData();\r\n        \r\n    },[url,curChart])\r\n\r\n    return (\r\n        <div className= \"generalpage\">\r\n            <div className=\"generalpage__heading\">Visualize data with metrics</div>\r\n            <GeneralPageSidebar curUrl={url} urls={urls} setUrl={setUrl} curChart={charts[curChart]}/>\r\n            <GeneralPageChartSelector curChart={curChart} setCurChart={setCurChart} charts={charts}/>\r\n            <GeneralPageMainPage dataSet={dataSet} curChart={curChart} charts={charts} url={urls[charts[curChart]][url]}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(GeneralPage)\r\n","import React ,{useCallback, memo}from 'react'\r\nimport '../stylesheets/DataTableSidebar.css';\r\nimport SidebarOption from '../SidebarOption'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction DataTableSidebar({curUrl, setUrl, urls}) {\r\n    const getUrlName = useCallback((text)=>{\r\n        return text.substring(0,text.indexOf(\"-\"))\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"datatable__sidebar flex flex-column\">\r\n            <Link to=\"/\">\r\n                <SidebarOption iconText=\"arrow_back_ios\" headerText=\"Select API\" handleClick={null} iconText=\"arrow_back_ios\" onClick={()=>{window.location.replace(window.location.origin)}}  />\r\n            </Link>\r\n            {\r\n                urls.map((url,i)=>(\r\n                    <SidebarOption iconText=\"link\" headerText={getUrlName(url)} handleClick={()=>setUrl(i)} selected={curUrl===i?true:false} key={i}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(DataTableSidebar)\r\n","import React,{useState,useEffect} from 'react'\r\n\r\nfunction DataTablePageHeader({handleSearch, metrics}) {\r\n    const [curMetric, setCurMetric] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(metrics != null)\r\n            setCurMetric(metrics[0])\r\n    },[metrics])\r\n    return (\r\n        <div className=\"datatable__pageheader flex flex-row\">\r\n            <div className=\"datatable__pageheader__searchbar flex flex-row\">\r\n                <label for=\"search\"><i className=\"material-icons\">search</i></label>\r\n                <input type=\"text\" onKeyUp={(e)=>handleSearch(e,curMetric)} id=\"search\" placeholder=\"Search by metric\" autoComplete=\"off\"/>\r\n            </div>\r\n            <select onChange={e=>setCurMetric(e.target.value)}>\r\n                    {\r\n                        metrics?.map((metric,i)=>(\r\n                            <option value={metric} key={i}>{metric.toUpperCase()} </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTablePageHeader\r\n","import React, {memo} from 'react'\r\n\r\nfunction DataTableTable({dataSet,metrics}) {\r\n    console.log(dataSet)\r\n    if(metrics == null){    //API has not fetched data yet\r\n        return (\r\n        <span className=\"material-icons loader\">\r\n            hourglass_empty\r\n        </span>\r\n        \r\n        )\r\n    }else if(dataSet == null || dataSet.length==0){   // No search results found\r\n        return (\r\n            <div className=\"centered flex flex-row no-search-results\">\r\n                <span className=\"material-icons\">\r\n                    search_off\r\n                </span> \r\n                <span>No results for search term</span>\r\n            </div>\r\n            \r\n            )\r\n    } else{\r\n        return (\r\n            <div className=\"datatable__table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                                {metrics?.map((metric,id)=>(\r\n                                    <th key={id}>{metric}</th>\r\n                                ))}\r\n                        </tr>\r\n                    </thead>\r\n\r\n                <tbody>\r\n                        {dataSet?.map((data,id)=>(\r\n                            <tr>\r\n                                {metrics?.map((metric,idd)=>(\r\n                                    <td key={idd+idd+id}>{data[metric]}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default memo(DataTableTable)\r\n","import React,{useState,useMemo} from 'react'\r\nimport '../stylesheets/DataTableMainPage.css'\r\nimport DataTablePageHeader from './DataTablePageHeader'\r\nimport DataTableTable from './DataTableTable'\r\nimport Fuse from 'fuse.js';\r\n\r\nfunction DataTableMainPage({dataSet}) {\r\n    const metrics =   useMemo(()=>{\r\n       if(dataSet != null && dataSet.length > 0)\r\n        return Object.keys(dataSet[0])\r\n       else\r\n        return null \r\n    }, [dataSet]);\r\n\r\n    const [filteredDataSet,setFilteredDataSet] = useState(dataSet);\r\n    function handleSearch(e,curMetric){\r\n        const options = {\r\n            keys: [\r\n                curMetric\r\n            ]\r\n        }\r\n        const fuse = new Fuse(dataSet,options);\r\n        setFilteredDataSet(fuse.search(e.target.value).map(result=>result.item))\r\n    }\r\n   \r\n    return (\r\n        <div className=\"datatable__mainpage flex flex-column\">\r\n            <DataTablePageHeader metrics={metrics} handleSearch={handleSearch}/>\r\n            <DataTableTable dataSet={filteredDataSet} metrics={metrics}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTableMainPage\r\n","import React,{memo,useEffect, useState,useMemo,useCallback} from 'react'\r\nimport axios from \"axios\"\r\nimport {env} from '../../app_config'\r\nimport DataTableSidebar from './DataTableSidebar'\r\nimport DataTableMainPage from './DataTableMainPage'\r\nimport '../stylesheets/DataTable.css'\r\n\r\nfunction DataTable() {\r\n    const [dataSet,setDataSet] = useState(null)\r\n    const getUrl = useCallback((text)=>{\r\n        return text.substring(text.indexOf(\"-\")+1)\r\n    },[])\r\n    const urls = useMemo(()=>['POI data-/poi','Hourly Events-/events/hourly','Daily Events-/events/daily','Hourly Stats-/stats/hourly','Daily Stats-/stats/daily'])\r\n    const [url,setUrl] = useState(0)\r\n    \r\n    useEffect(()=>{\r\n        console.log(env.API_URI+getUrl(urls[url]))\r\n        axios.get(env.API_URI+getUrl(urls[url]),{\r\n            headers:{\r\n                \"Access-Control-Allow-Origin\":\"*\"\r\n            }\r\n        }).then((res)=>{\r\n            setDataSet(res.data);\r\n        }).catch((err)=>{\r\n            alert(err);\r\n        })\r\n    },[url])\r\n    return (\r\n        <div className=\"datatable\">\r\n            <div className=\"datatable__heading\">Data Table Search</div>\r\n            <DataTableSidebar curUrl={url} urls={urls} setUrl={setUrl}/>\r\n            <DataTableMainPage dataSet={dataSet} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(DataTable)\r\n","import './App.css';\nimport {useMemo} from \"react\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport HomePage from './assets/HomePage';\nimport GeneralPage from './assets/GeneralPage/GeneralPage'\nimport DataTable from './assets/DataTable/DataTable'\nfunction App() {\n  const routes = useMemo(()=>{\n    return [{\n        path:\"/general\",\n        render:()=>(\n            <GeneralPage />\n        )\n    },\n    {\n      path:\"/datatable\",\n      render:()=>(\n          <DataTable />\n      )\n  },\n{\n  path: \"*\",\n  render:()=>(\n    <HomePage />\n  )\n}]\n},[])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {routes.map((route,i)=>(\n            <Route {...route} key={i}/>\n          ))}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}